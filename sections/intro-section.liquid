<link rel="preload" as="video" href="{{section.settings.vurl}}" type="video/mp4">
<div class="rel-mode">
  <div class="intro-wrap" id="introWrap">
    {% if section.settings.vurl != blank %}
    <video class="dvideo" id="introVideoD" playsinline autoplay muted>
      <source src="{{section.settings.vurl}}" type="video/mp4">
    </video>
    {%endif %}
    {% if section.settings.vmurl != blank %}
    <video class="mvideo" id="introVideoM" playsinline autoplay muted>
      <source src="{{section.settings.vmurl}}" type="video/mp4">
    </video>
    {%endif %}
  </div>
  <section class="hero" id="hero">
    <div class="hero-inner">
      <div class="hero-left">
        <div class="eyebrow">{{ section.settings.eyebrotext }}</div>
        <h1>{{ section.settings.title }}</h1>
        <a href="{{section.settings.btnurl}}" class="cta">{{section.settings.btntext}}</a>
      </div>
    </div>
  </section>
</div>

<style>
  .rel-mode {
    position: relative;
    height: 100vh;
    overflow: hidden;
  }

  .intro-wrap {
    pointer-events: none;
  }

  .intro-wrap .dvideo {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    position: absolute;
    pointer-events: none;
  }

  .intro-wrap .mvideo {
    display: none !important;
  }

  .hero-inner {
    padding-bottom: 80px;
  }

  .hero {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    background: transparent;
    opacity: 1;
    padding-block-end: 64px;
    padding-block-start: 64px;
    padding-bottom: 64px;
    padding-inline-end: 128px;
    padding-inline-start: 128px;
    padding-left: 128px;
    padding-right: 128px;
    padding-top: 64px;

  }

  .hero-inner h1 {
    font-size: 75px;
    font-family: 'area_normalthin';
    font-weight: 300;
    margin: 0 0 20px 0;
    line-height: 82px;
    color: #4A4A4A;
  }

  .hero-inner h1 span {
    display: block;
    opacity: 0;
    filter: blur(10px);
    transform: translateY(50px);
  }

  .hero-inner h1 span em {
    font-family: 'area_normalregular';
    font-weight: 400;
  }

  .eyebrow {
    color: #DCA1A1;
    font-size: 18px;
    margin-bottom: 10px;
    letter-spacing: 1px;
    transform: translateY(50px);
    filter: blur(10px);
    opacity: 0;
    font-weight: bold;
    margin-bottom: 24px;
  }


  .cta {
    display: inline-block;
    background: #e7aeb1;
    padding: 12px 25px;
    border-radius: 25px;
    text-decoration: none;
    color: white;
    font-size: 16px;
    transition: background 0.3s;
    transform: translateY(50px);
    filter: blur(10px);
    opacity: 0;
  }

  .cta:hover {
    background: #f6339a;
  }

  @media screen and (max-width: 1600px) {
    .hero-inner h1 {
      font-size: 64px;
      line-height: 69px;
      margin-bottom: 15px;
    }

    .eyebrow {
      font-size: 14px;
      margin-bottom: 10px;
    }

  }

  @media screen and (max-width: 1440px) {
    .hero-inner h1 {
      font-size: 58px;
      line-height: 62px;
      margin-bottom: 15px;

    }

    .eyebrow {
      font-size: 14px;
      margin-bottom: 10px;
    }

  }

  @media screen and (max-width: 1366px) {
    .hero-inner h1 {
      font-size: 54px;
      line-height: 59px;
      margin-bottom: 15px;
    }

    .eyebrow {
      font-size: 14px;
      margin-bottom: 10px;
    }

    .cta {
      font-size: 14px;
    }
  }

  @media screen and (max-width: 1024px) {
    .intro-wrap .dvideo {
      display: none !important;
    }

    .intro-wrap .mvideo {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
      position: absolute;
      pointer-events: none;
    }

    .hero {

      padding-block-end: 0;
      padding-block-start: 0px;
      padding-bottom: 0;
      padding-inline-end: 0;
      padding-inline-start: 0;
      padding-left: 0;
      padding-right: 0;
      padding-top: 140px;
      text-align: center;
      display: block;
    }

    .hero-inner h1 {
      font-size: 32px;
      font-family: 'area_normalregular';
      font-weight: 400;
      margin: 0;
      line-height: 100%;
      margin-bottom: 15px
    }

    .eyebrow {
      color: #000;
      font-size: 12px;
    }

    .rel-mode {
      background: #b9bfc4;
    }
  }

  @media screen and (max-width: 400px) {
    .hero {
      padding-top: 100px;
    }

    .cta {
      margin-top: 10px;
    }
  }
</style>
<script>
  const introWrap = document.getElementById('introWrap');
  const hero = document.getElementById('hero');
  const videoD = document.getElementById('introVideoD');
  const videoM = document.getElementById('introVideoM');

  let heroShown = false;

  function showHero() {
    if (heroShown) return;
    heroShown = true;

    gsap.to(".hero-inner .eyebrow", {
      opacity: 1,
      y: 0,
      filter: "blur(0px)",
      duration: 0.8,
      ease: "easeInOut",
      stagger: 0.2, // each line animates one after another
      delay: 0.2 // same logic as your Framer Motion code
    });
    gsap.to(".hero-inner h1 span", {
      opacity: 1,
      y: 0,
      filter: "blur(0px)",
      duration: 0.8,
      ease: "easeInOut",
      stagger: 0.2, // each line animates one after another
      delay: 0.5 // same logic as your Framer Motion code
    });
    gsap.to(".hero-inner h1 span.second-line", {
      opacity: 1,
      y: 0,
      filter: "blur(0px)",
      duration: 0.8,
      ease: "easeInOut",
      stagger: 0.2, // each line animates one after another
      delay: 0.6 // same logic as your Framer Motion code
    });
    gsap.to(".hero-inner .cta", {
      opacity: 1,
      y: 0,
      filter: "blur(0px)",
      duration: 0.8,
      ease: "easeInOut",
      stagger: 0.2, // each line animates one after another
      delay: 0.7 // same logic as your Framer Motion code
    });
  }


  if (window.innerWidth <= 1024) {
    // Mobile – video is hidden, show immediately
    showHero();
  } else {
    // Desktop / Tablet – wait until 10s before video ends
    videoD.addEventListener('loadedmetadata', function () {
      const videoDuration = videoD.duration;
      const showTime = Math.max(0, videoDuration - 10.0);

      videoD.addEventListener('timeupdate', () => {
        if (videoD.currentTime >= showTime && !heroShown) {
          showHero();
        }
      });
    });
  }


  // On video end → hide video bg if needed
  videoD.addEventListener('ended', () => {
    gsap.to(introWrap, {
      duration: 1,
      onComplete: () => {
        introWrap.style.display = "block";
      }
    });
  });
</script>
{% schema %}
{
"name": "Intro",
"class": "video-intro",
"tag": "section",
"settings": [
{
"type": "url",
"id": "vurl",
"label": "Video Url",
"info": "Please upload video on file section and copy url from there."
},
{
"type": "url",
"id": "vmurl",
"label": "Mobile Video Url",
"info": "Please upload video for mobile which will be visible in place of video"
},
{
"type": "text",
"id": "eyebrotext",
"label": "Eyebrow Text"
},
{
"type": "textarea",
"id": "title",
"label": "Title"
},
{
"type": "text",
"id": "btntext",
"label": "Button Text"
},
{
"type": "url",
"id": "btnurl",
"label": "Button Url"
}
],
"presets": [
{
"name": "Intro"
}
]
}
{% endschema %}